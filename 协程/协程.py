#!/usr/bin/env python
#-*-coding:utf-8 -*-
'''
   Name:HD
'''
r'''
    协程又称微线程,一句话说明协程就是一种用户态的轻量级线程。
    协程拥有自己的寄存器上下文和栈。
    协程只能保留上一次调用时的状态,每次过程重入时,就相当于进入上一次调用的状态,也就是说进入上一次离开时所处逻辑流的位置
    协程一般都是在单线程里运行的,协程是不可以多线程的
    协程的好处:
        1.无需线程上下文切换的开销。
        2.无须原子操作锁定及同步的开销
        3.方便切换控制流，简化变成模型
        4.高并发+高扩展性+低成本,一个CPU支持上万个协程都不是问题,所以很适合用于高并发处理。

    协程的缺点：
        1.无法利用多核资源，协程的本质是个单线程，它不能同时将单个CPU的多个核用上,协程需要和进程配合才能运行在多CPU上,一般普通日常编写的绝大部分应用都没有这个必要,除非是cpu密集型应用
        2.进程阻塞操作,会阻塞掉整个程序
'''

#例:
#使用yield实现协程操作例
import time
import queue
def consumer(name):
    print("----->starting eating baozi.....")

